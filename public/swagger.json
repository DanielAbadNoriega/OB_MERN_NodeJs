{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"BasicResponse": {
				"properties": {
					"message": {
						"type": "string"
					}
				},
				"required": [
					"message"
				],
				"type": "object",
				"description": "Basic JSON response for Controllers"
			},
			"ByeResponse": {
				"properties": {
					"Date": {
						"type": "string"
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"Date",
					"message"
				],
				"type": "object",
				"description": "JSON response for ByeController"
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "ob_mern_t1_e1",
		"version": "1.0.0",
		"description": "MERN - Exercise 1",
		"license": {
			"name": "ISC"
		},
		"contact": {
			"name": "Daniel Abad Noriega"
		}
	},
	"openapi": "3.0.0",
	"paths": {
		"/api/hello": {
			"get": {
				"operationId": "GetMessage",
				"responses": {
					"200": {
						"description": "Promise of BasicResponse",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BasicResponse"
								}
							}
						}
					}
				},
				"description": "Endpoint to retreive a Message \"Hello {name}\" in JSON",
				"tags": [
					"HelloController"
				],
				"security": [],
				"parameters": [
					{
						"description": "Name of user to be greeted",
						"in": "query",
						"name": "name",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/goodbye": {
			"get": {
				"operationId": "GetMessage",
				"responses": {
					"200": {
						"description": "Promise of BasicResponse",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ByeResponse"
								}
							}
						}
					}
				},
				"description": "Endpoint to retreive a Message \"Goodbye {name}\" and the date in JSON",
				"tags": [
					"ByeController"
				],
				"security": [],
				"parameters": [
					{
						"description": "Name of user to be greeted",
						"in": "query",
						"name": "name",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/users": {
			"get": {
				"operationId": "GetUsers",
				"responses": {
					"200": {
						"description": "All user or user found by ID.",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "Endpoint to retrieve the Users in the collection 'Users' of DB.",
				"tags": [
					"UsersController"
				],
				"security": [],
				"parameters": [
					{
						"description": "Id of user to retrieve (optional).",
						"in": "query",
						"name": "id",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"delete": {
				"operationId": "DeleteUser",
				"responses": {
					"200": {
						"description": "message informing if deletion is success.",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "Endpoint to DELETE user in the collection 'Users' of DB.",
				"tags": [
					"UsersController"
				],
				"security": [],
				"parameters": [
					{
						"description": "Id of user to DELETE (optional).",
						"in": "query",
						"name": "id",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	],
	"tags": [
		{
			"name": "UsersController",
			"description": "Operations about users",
			"externalDocs": {
				"description": "Find out more about users",
				"url": "http://localhost:8000/docs/#/UsersController"
			}
		}
	]
}